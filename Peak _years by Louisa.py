# -*- coding: utf-8 -*-
"""Yet another copy of parasitic disease.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14Wis3-GucsZnSPcAcHsQBh-x4wYzw7tM
"""

# Load datasets
import pandas as pd
relevant_articles_final = pd.read_csv("data/relevant_articles_final.csv",encoding='latin-1')
# Ensure the 'Year' column exists
if 'Year' not in relevant_articles_final.columns:
    raise KeyError("The dataset must contain a 'Year' column.")

# Group by 'Year' and count the number of PMIDs (publications)
yearly_publications = (
    relevant_articles_final.groupby('Year')['PMID']
    .count()
    .reset_index(name='PublicationCount')
)

# Identify peak years
peak_years = yearly_publications.sort_values(by='PublicationCount', ascending=False).head(5)
print("Peak Research Years:")
print(peak_years)


import matplotlib.pyplot as plt

relevant_articles = pd.read_csv("data/relevant_articles_final.csv",encoding='latin-1')

# Ensure necessary columns exist
required_columns = ['Year','SJR']
if not all(col in relevant_articles.columns for col in required_columns):
    raise KeyError(f"Missing one or more required columns: {required_columns}")

# Group by 'Year' and calculate average impact metrics
impact_trends = (
    relevant_articles.groupby('Year')['SJR']
    .mean()
    .reset_index()
)

# Identify peak years (e.g., top 5 years with the most publications)
publication_counts = (
    relevant_articles.groupby('Year')['PMID']
    .count()
    .reset_index(name='PublicationCount')
)
peak_years = publication_counts.sort_values(by='PublicationCount', ascending=False).head(5)['Year'].tolist()

# Plot Research Impact (SJR)
plt.figure(figsize=(14, 6))


# Plot average SJR over time
plt.plot(
    impact_trends['Year'],
    impact_trends['SJR'],
    label='Average SJR (Journal Quality)',
    marker='o',
    color='green'
)

# Highlight peak years
for year in peak_years:
    plt.axvline(x=year, color='red', linestyle='--', alpha=0.7, label=f'Peak Year: {year}')

# Add labels, title, and legend
plt.xlabel('Year', fontsize=14)
plt.ylabel('Research Impact (SJR)', fontsize=14)
plt.title('Research Impact Over Time', fontsize=16)
plt.legend(fontsize=12)
plt.grid(alpha=0.4, linestyle='--')